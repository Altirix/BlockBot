// Sometimes gradle likes to pull in the wrong version of asm.
// Like when I was trying to make this buildscript work.
// Why gradle, why.
buildscript {
	dependencies {
		constraints {
			["asm", "asm-util", "asm-tree", "asm-analysis"].forEach {
				classpath("org.ow2.asm:$it") {
					version { require("9.0") }
					because("Fabric's TinyRemapper requires ASM 9")
				}
			}
		}
	}
}

plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '6.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
	shade
	implementation.extendsFrom shade

	// In case it is needed in future
	modShade
	modImplementation.extendsFrom modShade
}

repositories {
	maven {
		name 'm2-dv8tion'
		url 'https://m2.dv8tion.net/releases'
	}
	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	shade('net.dv8tion:JDA:4.2.1_256') {
		exclude module: 'opus-java'
	}
	shade 'club.minnced:discord-webhooks:0.5.6'
	include "com.squareup.okhttp3:okhttp:4.9.0"
	include "org.slf4j:slf4j-api:1.7.9"
	include "org.apache.logging.log4j:log4j-slf4j-impl:2.8.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

shadowJar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
	from sourceSets.main.output

	configurations = [ project.configurations.shade, project.configurations.modShade ]
	classifier = "dev-all"
	exclude("kotlin/**", "kotlinx/**", "javax/**", "META-INF")
	exclude "org/checkerframework/**", "org/jetbrains/**", "org/intellij/**"
	exclude "com/google/gson/**"
	exclude "net/kyori/**"
	exclude "org/slf4j/**"

	def relocPath = "com.github.quiltservertools.blockbot.libs."
	relocate "com.iwebpp.crypto", relocPath + "com.iwebpp.crypto"
	relocate "net.dv8tion.jda", relocPath + "net.dv8tion.jda"
	relocate "com.neovisionaries", relocPath + "com.neovisionaries"
	relocate "okhttp3", relocPath + "okhttp3"
	relocate "okio", relocPath + "okio"
	relocate "org.apache.commons.collections4", relocPath + "org.apache.commons.collections4"
	relocate "club.minnced.discord", relocPath + "club.minnced.discord"
	relocate "org.json", relocPath + "org.json"
	relocate "com.fasterxml", relocPath + "com.fasterxml"
	relocate "gnu.trove", relocPath + "gnu.trove"
}

remapJar {
	dependsOn(shadowJar)
	input.set(shadowJar.archivePath)
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
